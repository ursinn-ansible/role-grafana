---
- name: set vars
  set_fact:
    docker_image: '{{ role_grafana_image }}'
    docker_container: '{{ role_grafana_container }}'
    docker_volume: '{{ role_grafana_volume }}_data'
    docker_network: '{{ role_grafana_network }}'

- name: Ensure image is pulled
  community.docker.docker_image:
    name: "{{ docker_image }}"
    source: pull
    force_source: yes
  register: pulled

- name: Remove container
  community.docker.docker_container:
    name: "{{ docker_container }}"
    state: absent
  when: pulled.changed

- name: Get infos on container
  community.docker.docker_container_info:
    name: "{{ docker_container }}"
  register: result

- name: Create volume
  community.docker.docker_volume:
    name: "{{ docker_volume }}"

- name: Create network
  community.docker.docker_network:
    name: "{{ docker_network }}"
    driver_options:
          com.docker.network.bridge.name: "br-{{ docker_network }}"

- name: Create grafana container
  community.docker.docker_container:
    image: "{{ docker_image }}"
    volumes:
     - '{{ docker_volume }}:/var/lib/grafana:Z'
    env:
      GF_METRICS_BASIC_AUTH_USERNAME: '{{ role_grafana_config_metrics_basic_auth_username }}'
      GF_METRICS_BASIC_AUTH_PASSWORD: '{{ role_grafana_config_metrics_basic_auth_password }}'
      #
      GF_AUTH_SIGNOUT_REDIRECT_URL: '{{ role_grafana_config_auth_signout_redirect_url }}'
      GF_AUTH_OAUTH_AUTO_LOGIN: '{{ role_grafana_config_auth_oauth_auto_login }}'
      #
      GF_AUTH_GENERIC_OAUTH_ENABLED: '{{ role_grafana_config_auth_generic_oauth_enabled }}'
      GF_AUTH_GENERIC_OAUTH_NAME: '{{ role_grafana_config_auth_generic_oauth_name }}'
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: '{{ role_grafana_config_auth_generic_oauth_client_id }}'
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: '{{ role_grafana_config_auth_generic_oauth_client_secret }}'
      GF_AUTH_GENERIC_OAUTH_SCOPES: '{{ role_grafana_config_auth_generic_oauth_scopes }}'
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: '{{ role_grafana_config_auth_generic_oauth_auth_url }}'
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: '{{ role_grafana_config_auth_generic_oauth_token_url }}'
      GF_AUTH_GENERIC_OAUTH_API_URL: '{{ role_grafana_config_auth_generic_oauth_api_url }}'
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: '{{ role_grafana_config_auth_generic_oauth_role_attribute_path }}'
      #
      GF_SERVER_ROOT_URL: '{{ role_grafana_config_server_root_url }}'
    name: "{{ docker_container }}"
    networks:
     - name: "{{ docker_network }}"
    restart_policy: unless-stopped
    state: started
  when:
    pulled.changed
    or
    result.exists == false
